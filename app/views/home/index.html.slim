body
  = render partial: "layouts/nav"

  .tabs
    ul.nav.nav-tabs.nav-fill.sticky-top.blur-bg
      li.nav-item
        div class="#{'active' if params[:tab] == 'recommend'} text-center hover-bg py-3 px-2" type="button" data-bs-toggle="tab" data-bs-target="#for-you"
          = link_to 'おすすめ', home_index_path(tab: 'recommend'), class: 'link'
      li.nav-item
        div class="#{'active' if params[:tab] == 'follow'} text-center hover-bg py-3 px-2" type="button" data-bs-toggle="tab" data-bs-target="#following"
          = link_to 'フォロー中', home_index_path(tab: 'follow'), class: 'link'

    .tweet
      = form_with model: @tweet, scope: :tweet, url: { controller:'tweets', action: 'create' }, local: true, data: { turbo: false } do |f|
        ul
          li
            - if user_signed_in?
              - if current_user.icon.attached?
                = link_to image_tag(current_user.icon, alt: "Icon image", class: "icon_image", size: '50x50'), user_path(current_user.id)
          li
            .form-group
              = f.text_field :content, placeholder: 'いまどうしてる？', class: "form-group form-control", style: "border: none"
        = f.label :images do
          = image_tag('photo.png', size: '35x35', class: 'image')
          = f.file_field :images, style: 'display:none', multiple: true
        end
        = f.submit 'ポストする', class: 'post btn btn-primary'

    .tab-content
      div class="#{'show active' if params[:tab] == 'recommend'} tab-pane fade " id="for-you"
        - @tweets.each do |tweet|
          = link_to tweet_path(tweet.id) do
            - if tweet.retweets.exists?(user: current_user)
              ul
                li
                  = image_tag('repost.png', size: '20x20', class: 'titled_repost')
                  object = link_to 'あなたがリポストしました', user_path(current_user.id)
            ul
              li
                object = link_to image_tag(tweet.user.icon, alt: "Icon image", class: "icon_image", size: '50x50'), profile_path(tweet.user.id)
              li 
                object = link_to tweet.user.name, profile_path(tweet.user.id), class: 'link'
              li 投稿日： #{tweet.created_at.strftime('%Y/%m/%d %H:%M:%S')}
              - if current_user.present? && tweet.user.name.include?(current_user.name)
                li.dropdown
                  | ... 
              - elsif current_user.present? && tweet.user.followers.pluck(:user_id).include?(current_user.id)
                li.dropdown
                  | ... 
                  ul.sub-list
                    li.sub
                      object
                        = link_to "#{tweet.user.name}さんのフォローを解除する", follower_path(tweet.user.followers.find_by(user_id: current_user.id).id), data: {turbo_method: :delete}
              - elsif current_user.present? && !tweet.user.followers.pluck(:user_id).include?(current_user.id)
                li.dropdown
                  | ... 
                  ul.sub-list
                    li.sub
                      object
                        = link_to "#{tweet.user.name}さんをフォロー", followers_path(user_id: tweet.user.id), data: {turbo_method: :post}
            p = tweet.content 
            - if tweet.images.attached?
              - tweet.images.each do |tweet_image|
                = image_tag tweet_image, size: '250x200', class: "tweet_image"
          end
          .icons
            .comment
              = link_to image_tag('comment.png', size: '26x26', class: "balloon"), tweet_path(tweet.id)
              = tweet.comments.length
            .repost
              - if current_user.present? && tweet.retweets.exists?(user: current_user)
                = link_to image_tag('repost.png', size: '26x26', class: "circled_arrow"), tweet_retweet_path(tweet_id: tweet.id, id: tweet.retweets.find_by(user: current_user).id), data: {turbo_method: :delete}
                = tweet.retweets.length
              - else
                = link_to image_tag('repost.png', size: '26x26', class: "circled_arrow"), tweet_retweets_path(tweet_id: tweet.id), data: {turbo_method: :post}
                = tweet.retweets.length
            .favorite
              - if current_user.present? && tweet.favorites.exists?(user: current_user)
                = link_to image_tag('heart.png', size: '32x32'), tweet_favorite_path(tweet_id: tweet.id, id: tweet.favorites.find_by(user: current_user).id), data: {turbo_method: :delete}
                = tweet.favorites.length
              - else
                = link_to image_tag('heart_with_hole.png', size: '32x32'), tweet_favorites_path(tweet_id: tweet.id), data: {turbo_method: :post}
                = tweet.favorites.length
          hr
        = paginate @tweets, :param_name => 'recommend', params: {tab: 'recommend'}, theme: 'twitter-bootstrap-4'

      div class="#{'show active' if params[:tab] == 'follow'} tab-pane fade " id="following"
        - if current_user
          - @followers_tweets.each do |tweet|
            = link_to tweet_path(tweet.id) do
              - if tweet.retweets.exists?(user: current_user)
                ul
                  li
                    = image_tag('repost.png', size: '20x20', class: 'titled_repost')
                    object = link_to 'あなたがリポストしました', user_path(current_user.id)
              ul
                li
                  object = link_to image_tag(tweet.user.icon, alt: "Icon image", class: "icon_image", size: '50x50'), profile_path(tweet.user.id)
                li
                  object = link_to tweet.user.name, profile_path(tweet.user.id), class: 'link'
                li 投稿日： #{tweet.created_at.strftime('%Y/%m/%d %H:%M:%S')}
                - if current_user.present? && tweet.user.name.include?(current_user.name)
                  li.dropdown
                    | ... 
                - elsif current_user.present? && tweet.user.followers.pluck(:user_id).include?(current_user.id)
                  li.dropdown
                    | ... 
                    ul.sub-list
                      li.sub
                        object
                          = link_to "#{tweet.user.name}さんのフォローを解除する", follower_path(tweet.user.followers.find_by(user_id: current_user.id).id), data: {turbo_method: :delete}
                - elsif current_user.present? && !tweet.user.followers.pluck(:user_id).include?(current_user.id)
                  li.dropdown
                    | ... 
                    ul.sub-list
                      li.sub
                        object
                          = link_to "#{tweet.user.name}さんをフォロー", followers_path(user_id: tweet.user.id), data: {turbo_method: :post}
              p = tweet.content
              - if tweet.images.attached?
                - tweet.images.each do |tweet_image|
                  = image_tag tweet_image, size: '250x200', class: "tweet_image"
            end
            .icons
              .comment
                = link_to image_tag('comment.png', size: '26x26', class: "balloon"), tweet_path(tweet.id)
                = tweet.comments.length
              .repost
                - if current_user.present? && tweet.retweets.exists?(user: current_user)
                  = link_to image_tag('repost.png', size: '26x26', class: "circled_arrow"), tweet_retweet_path(tweet_id: tweet.id, id: tweet.retweets.find_by(user: current_user).id), data: {turbo_method: :delete}
                  = tweet.retweets.length
                - else
                  = link_to image_tag('repost.png', size: '26x26', class: "circled_arrow"), tweet_retweets_path(tweet_id: tweet.id), data: {turbo_method: :post}
                  = tweet.retweets.length
              .favorite
                - if current_user.present? && tweet.favorites.exists?(user: current_user)
                  = link_to image_tag('heart.png', size: '32x32'), tweet_favorite_path(tweet_id: tweet.id, id: tweet.favorites.find_by(user: current_user).id), data: {turbo_method: :delete}
                  = tweet.favorites.length
                - else
                  = link_to image_tag('heart_with_hole.png', size: '32x32'), tweet_favorites_path(tweet_id: tweet.id), data: {turbo_method: :post}
                  = tweet.favorites.length
            hr
          = paginate @followers_tweets, :param_name => 'follow', params: {tab: 'follow'}, theme: 'twitter-bootstrap-4'
        - else
          p ログインしていません